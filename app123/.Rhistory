br(),
checkboxInput('jitter', 'Jitter'),
checkboxInput('smooth', 'Smooth')
),
column(4, offset = 1,
selectInput('x', 'X', names(dataset)),
selectInput('y', 'Y', names(dataset), names(dataset)[[2]]),
selectInput('color', 'Color', c('None', names(dataset)))
),
column(4,
selectInput('facet_row', 'Facet Row', c(None='.', names(dataset))),
selectInput('facet_col', 'Facet Column', c(None='.', names(dataset)))
)
)
))
shiny::runApp('Documents/devfest/shinyapps-master/STATS19_scanner')
result()
x<-runif(n,min=0,max=100)
x<--0.2+0.04*x
pi<-exp(x)/(1+exp(x))
y<-rep(1:n)
for (i in 1:n){
y[i]<-rbinom(1,1,pi[i])
}
m1=glm(y~x, family=binomial(link=logit))
u=exp(predict(m1, data.frame(x=x)))/(1+exp(predict(m1, data.frame(x=x))))
cor(y-u,u)
x<-runif(n,min=0,max=100)
x<--0.2+0.04*x
pi<-exp(x)/(1+exp(x))
y<-rep(1:n)
for (i in 1:n){
y[i]<-rbinom(1,1,pi[i])
}
m1=glm(y~x, family=binomial(link=logit))
u=exp(predict(m1, data.frame(x=x)))/(1+exp(predict(m1, data.frame(x=x))))
x<-runif(n,min=0,max=100)
x<--0.2+0.04*x
pi<-exp(x)/(1+exp(x))
x<-runif(n,min=0,max=100)
result<-function(n){
x<-runif(n,min=0,max=100)
x<--0.2+0.04*x
pi<-exp(x)/(1+exp(x))
y<-rep(1:n)
for (i in 1:n){
y[i]<-rbinom(1,1,pi[i])
}
m1=glm(y~x, family=binomial(link=logit))
u=exp(predict(m1, data.frame(x=x)))/(1+exp(predict(m1, data.frame(x=x))))
cor(y-u,u)
}
result(25)
result(25)
result(25)
result(25)
result(25)
result(100)
result<-function(n){
x<-runif(n,min=0,max=100)
x<--0.2+0.04*x
pi<-exp(x)/(1+exp(x))
y<-rep(1:n)
for (i in 1:n){
y[i]<-rbinom(1,1,pi[i])
}
m1=glm(y~x, family=binomial(link=logit))
u=exp(predict(m1, data.frame(x=x)))/(1+exp(predict(m1, data.frame(x=x))))
cor(y-u,u)
}
result(25)
result(100)
result(1000)
result(10000)
CORR=function(n){
x=runif(n,0,100)
y=NULL
for (i in 1:n){
a=exp(-2+0.04*x[i])
p=a/(1+a)
y=cbind(y,rbinom(1,1,p))
}
fm=glm(y[1,]~x, family=binomial(link=logit))
pre=predict(fm, data.frame(x=x))
u=exp(pre)/(1+exp(pre))
cor(y[1,]-u,u)
}
CORR(25)
CORR(100)
CORR(1000)
CORR(10000)
result<-function(n){
x<-runif(n,min=0,max=100)
x<--0.2+0.04*x
pi<-exp(x)/(1+exp(x))
y<-rep(1:n)
for (i in 1:n){
y[i]<-rbinom(1,1,pi[i])
}
m1=glm(y~x, family=binomial(link=logit))
u=exp(predict(m1, data.frame(x=x)))/(1+exp(predict(m1, data.frame(x=x))))
cor(y-u,u)
}
result(25)
result(100)
result(1000)
result(10000)
#3
y<-c(16/58, 9/90, 10/48, 13/57, 19/103, 20/57, 18/86, 17/112, 35/273, 55/64)
z<-c(12/113, 1/18, 2/14, 4/44, 9/208, 7/67, 9/29, 8/154)
y<-1/(1/y+1)
z<-1/(1/z+1)
lkhd=function(a,b,y)
{
prob=1
for (i in 1:length(y)){
prob=prob/beta(a,b)*y[i]^(a-1)*(1-y[i])^(b-1)
}
prob
}
alpha=seq(0.1,20,0.1);na=length(alpha)
beta=seq(0.1,50,0.1);nb=length(beta)
prior=function(a,b)
{
u<-a/(a+b)
s2<-u*(1-u)/(a+b+1)
prob = 1*1/(u*(1-u))
}
zy=matrix(0,na,nb)
for (i in 1:na){
zy[i,]=lkhd(alpha[i],beta,y)*prior(alpha[i],beta)
}
par(mfrow=c(1,2))
zy=zy/sum(zy*0.1*0.1)
contour(alpha,beta,zy, nlevels=10,
main="Contour plot of posterior Thetay",
xlim=c(0,10),ylim=c(0,40),xlab="alpha",ylab="beta")
alphaz=seq(0.1,20,0.1);na=length(alphaz)
betaz=seq(0.1,100,0.1);nb=length(betaz)
zz=matrix(0,na,nb)
for (i in 1:na){
zz[i,]=lkhd(alphaz[i],betaz,z)
}
zz=zz/sum(zz*0.1*0.1)
contour(alphaz,betaz,zz, nlevels=10,
main="Contour plot of posterior Thetaz",
xlim=c(0,10),ylim=c(0,80),xlab="alpha",ylab="beta")
amary=NULL
for (i in 1:nrow(zy)){
amary=cbind(amary,sum(zy[i,])*0.1)}
amary<-amary/sum(amary*0.1)
simu=matrix(0,1000,2)
#3
y<-c(16/58, 9/90, 10/48, 13/57, 19/103, 20/57, 18/86, 17/112, 35/273, 55/64)
z<-c(12/113, 1/18, 2/14, 4/44, 9/208, 7/67, 9/29, 8/154)
y<-1/(1/y+1)
z<-1/(1/z+1)
lkhd=function(a,b,y)
{
prob=1
for (i in 1:length(y)){
prob=prob/beta(a,b)*y[i]^(a-1)*(1-y[i])^(b-1)
}
prob
}
alpha=seq(0.1,20,0.1);na=length(alpha)
beta=seq(0.1,50,0.1);nb=length(beta)
prior=function(a,b)
{
u<-a/(a+b)
s2<-u*(1-u)/(a+b+1)
prob = 1*1/(u*(1-u))
}
#alpha=seq(0.1,100,0.1);na=length(alpha)
#beta=seq(0.1,100,0.1);nb=length(beta)
zy=matrix(0,na,nb)
for (i in 1:na){
zy[i,]=lkhd(alpha[i],beta,y)*prior(alpha[i],beta)
}
par(mfrow=c(1,2))
zy=zy/sum(zy*0.1*0.1)
contour(alpha,beta,zy, nlevels=10,
main="Contour plot of posterior Thetay",
xlim=c(0,10),ylim=c(0,40),xlab="alpha",ylab="beta")
alphaz=seq(0.1,20,0.1);na=length(alphaz)
betaz=seq(0.1,100,0.1);nb=length(betaz)
zz=matrix(0,na,nb)
for (i in 1:na){
zz[i,]=lkhd(alphaz[i],betaz,z)*prior(alphaz[i],betaz)
}
zz=zz/sum(zz*0.1*0.1)
contour(alphaz,betaz,zz, nlevels=10,
main="Contour plot of posterior Thetaz",
xlim=c(0,10),ylim=c(0,80),xlab="alpha",ylab="beta")
amary=NULL
for (i in 1:nrow(zy)){
amary=cbind(amary,sum(zy[i,])*0.1)}
amary<-amary/sum(amary*0.1)
simu=matrix(0,1000,2)
for (i in 1:1000){
a=sample(alpha,1,prob=amary)
b=sample(beta,1,prob=zy[which(alpha==a),]/sum(zn[which(alpha==a),]*0.1))
simu[i,]=c(a,b)
}
plot(simu[,2]~ simu[,1],
type="p",xlim=c(0,20),ylim=c(0,60),
xlab="alpha",ylab="beta",main = "Simulation of thetay")
amarz=NULL
for (i in 1:nrow(zz)){
amarz=cbind(amarz,sum(zz[i,])*0.1)}
amarz<-amarz/sum(amarz*0.1)
simu1=matrix(0,1000,2)
for (i in 1:1000){
a=sample(alphaz,1,prob=amarz)
b=sample(betaz,1,prob=zz[which(alphaz==a),]/sum(zz[which(alphaz==a),]*0.1))
simu1[i,]=c(a,b)
}
plot(simu1[,2]~ simu1[,1],
type="p",xlim=c(0,20),ylim=c(0,100),
xlab="alpha",ylab="beta",main = "Simulation of thetaz")
#(d)
uy<-simu[,1]/(simu[,1]+simu[,2])
uz<-simu1[,1]/(simu1[,1]+simu1[,2])
par(mfrow=c(1,1))
hist(uy-uz,breaks= 30)
simu=matrix(0,1000,2)
for (i in 1:1000){
a=sample(alpha,1,prob=amary)
b=sample(beta,1,prob=zy[which(alpha==a),]/sum(zn[which(alpha==a),]*0.1))
simu[i,]=c(a,b)
}
#3
y<-c(16/58, 9/90, 10/48, 13/57, 19/103, 20/57, 18/86, 17/112, 35/273, 55/64)
z<-c(12/113, 1/18, 2/14, 4/44, 9/208, 7/67, 9/29, 8/154)
y<-1/(1/y+1)
z<-1/(1/z+1)
lkhd=function(a,b,y)
{
prob=1
for (i in 1:length(y)){
prob=prob/beta(a,b)*y[i]^(a-1)*(1-y[i])^(b-1)
}
prob
}
alpha=seq(0.1,20,0.1);na=length(alpha)
beta=seq(0.1,50,0.1);nb=length(beta)
prior=function(a,b)
{
u<-a/(a+b)
s2<-u*(1-u)/(a+b+1)
prob = 1*1/(u*(1-u))
}
#alpha=seq(0.1,100,0.1);na=length(alpha)
#beta=seq(0.1,100,0.1);nb=length(beta)
zy=matrix(0,na,nb)
for (i in 1:na){
zy[i,]=lkhd(alpha[i],beta,y)*prior(alpha[i],beta)
}
par(mfrow=c(1,2))
zy=zy/sum(zy*0.1*0.1)
contour(alpha,beta,zy, nlevels=10,
main="Contour plot of posterior Thetay",
xlim=c(0,10),ylim=c(0,40),xlab="alpha",ylab="beta")
alphaz=seq(0.1,20,0.1);na=length(alphaz)
betaz=seq(0.1,100,0.1);nb=length(betaz)
zz=matrix(0,na,nb)
for (i in 1:na){
zz[i,]=lkhd(alphaz[i],betaz,z)*prior(alphaz[i],betaz)
}
zz=zz/sum(zz*0.1*0.1)
contour(alphaz,betaz,zz, nlevels=10,
main="Contour plot of posterior Thetaz",
xlim=c(0,10),ylim=c(0,80),xlab="alpha",ylab="beta")
amary=NULL
for (i in 1:nrow(zy)){
amary=cbind(amary,sum(zy[i,])*0.1)}
amary<-amary/sum(amary*0.1)
simu=matrix(0,1000,2)
for (i in 1:1000){
a=sample(alpha,1,prob=amary)
b=sample(beta,1,prob=zy[which(alpha==a),]/sum(zy[which(alpha==a),]*0.1))
simu[i,]=c(a,b)
}
plot(simu[,2]~ simu[,1],
type="p",xlim=c(0,20),ylim=c(0,60),
xlab="alpha",ylab="beta",main = "Simulation of thetay")
amarz=NULL
for (i in 1:nrow(zz)){
amarz=cbind(amarz,sum(zz[i,])*0.1)}
amarz<-amarz/sum(amarz*0.1)
simu1=matrix(0,1000,2)
for (i in 1:1000){
a=sample(alphaz,1,prob=amarz)
b=sample(betaz,1,prob=zz[which(alphaz==a),]/sum(zz[which(alphaz==a),]*0.1))
simu1[i,]=c(a,b)
}
plot(simu1[,2]~ simu1[,1],
type="p",xlim=c(0,20),ylim=c(0,100),
xlab="alpha",ylab="beta",main = "Simulation of thetaz")
#(d)
uy<-simu[,1]/(simu[,1]+simu[,2])
uz<-simu1[,1]/(simu1[,1]+simu1[,2])
par(mfrow=c(1,1))
hist(uy-uz,breaks= 30)
#3
y<-c(16/58, 9/90, 10/48, 13/57, 19/103, 20/57, 18/86, 17/112, 35/273, 55/64)
z<-c(12/113, 1/18, 2/14, 4/44, 9/208, 7/67, 9/29, 8/154)
y<-1/(1/y+1)
z<-1/(1/z+1)
lkhd=function(a,b,y)
{
prob=1
for (i in 1:length(y)){
prob=prob/beta(a,b)*y[i]^(a-1)*(1-y[i])^(b-1)
}
prob
}
alpha=seq(0.1,50,0.1);na=length(alpha)
beta=seq(0.1,50,0.1);nb=length(beta)
prior=function(a,b)
{
u<-a/(a+b)
s2<-u*(1-u)/(a+b+1)
prob = 1*1/(u*(1-u))
}
#alpha=seq(0.1,100,0.1);na=length(alpha)
#beta=seq(0.1,100,0.1);nb=length(beta)
zy=matrix(0,na,nb)
for (i in 1:na){
zy[i,]=lkhd(alpha[i],beta,y)*prior(alpha[i],beta)
}
par(mfrow=c(1,2))
zy=zy/sum(zy*0.1*0.1)
contour(alpha,beta,zy, nlevels=10,
main="Contour plot of posterior Thetay",
xlim=c(0,10),ylim=c(0,40),xlab="alpha",ylab="beta")
alphaz=seq(0.1,50,0.1);na=length(alphaz)
betaz=seq(0.1,100,0.1);nb=length(betaz)
zz=matrix(0,na,nb)
for (i in 1:na){
zz[i,]=lkhd(alphaz[i],betaz,z)*prior(alphaz[i],betaz)
}
zz=zz/sum(zz*0.1*0.1)
contour(alphaz,betaz,zz, nlevels=10,
main="Contour plot of posterior Thetaz",
xlim=c(0,10),ylim=c(0,80),xlab="alpha",ylab="beta")
amary=NULL
for (i in 1:nrow(zy)){
amary=cbind(amary,sum(zy[i,])*0.1)}
amary<-amary/sum(amary*0.1)
simu=matrix(0,1000,2)
for (i in 1:1000){
a=sample(alpha,1,prob=amary)
b=sample(beta,1,prob=zy[which(alpha==a),]/sum(zy[which(alpha==a),]*0.1))
simu[i,]=c(a,b)
}
plot(simu[,2]~ simu[,1],
type="p",xlim=c(0,20),ylim=c(0,60),
xlab="alpha",ylab="beta",main = "Simulation of thetay")
amarz=NULL
for (i in 1:nrow(zz)){
amarz=cbind(amarz,sum(zz[i,])*0.1)}
amarz<-amarz/sum(amarz*0.1)
simu1=matrix(0,1000,2)
for (i in 1:1000){
a=sample(alphaz,1,prob=amarz)
b=sample(betaz,1,prob=zz[which(alphaz==a),]/sum(zz[which(alphaz==a),]*0.1))
simu1[i,]=c(a,b)
}
plot(simu1[,2]~ simu1[,1],
type="p",xlim=c(0,20),ylim=c(0,100),
xlab="alpha",ylab="beta",main = "Simulation of thetaz")
#(d)
uy<-simu[,1]/(simu[,1]+simu[,2])
uz<-simu1[,1]/(simu1[,1]+simu1[,2])
par(mfrow=c(1,1))
hist(uy-uz,breaks= 30)
library(RCurl)
web_page <- getURL("http://tycho.usno.navy.mil/cgi-bin/timer.pl")
library(RCurl)
web_page <- getURL("http://www.bloomberg.com/news/articles/2015-07-02/dupont-spins-off-chemicals-and-cleanup-liabilities-l")
web_page
library(XML)
page_tree <- htmlTreeParse(webpage)
library(XML)
page_tree <- htmlTreeParse(web_page)
page_tree
#2.b
xc<-rt(1000,df = 31)*sqrt(0.0075*29/31)+1.013
xt<-rt(1000,df = 35)*sqrt(0.2/36*33/35)+1.173
diff<-xt-xc
hist(diff,breaks = 20,main = "Histogram of the ut-uc")
>quantile(diff, c(.025, .975))
quantile(diff, c(.025, .975))
#2.b
xc<-rt(1000,df = 31)*sqrt(0.24^2/32*29/31)+1.013
xt<-rt(1000,df = 35)*sqrt(0.2^2/36*33/35)+1.173
diff<-xt-xc
hist(diff,breaks = 20,main = "Histogram of the ut-uc")
quantile(diff, c(.025, .975))
#2.b
xc<-rt(1000,df = 31)*sqrt(0.24^2/32)+1.013
xt<-rt(1000,df = 35)*sqrt(0.2^2/36)+1.173
diff<-xt-xc
hist(diff,breaks = 20,main = "Histogram of the ut-uc")
quantile(diff, c(.025, .975))
shiny::runApp('Documents/stat4249/project2-project2-group2/app123')
shiny::runApp('Documents/stat4249/project2-project2-group2/app123')
shiny::runApp('Documents/stat4249/project2-project2-group2/app123')
shiny::runApp('Documents/stat4249/project2-project2-group2/app123')
library(leaflet)
leafletOutput
shiny::runApp('Documents/stat4249/project2-project2-group2/app123')
install_github("rstudio/leaflet")
devtools ::install_github("rstudio/leaflet")
shiny::runApp('Documents/stat4249/project2-project2-group2/app123')
shiny::runApp('Documents/stat4249/project2-project2-group2/app123')
install.packages("data.table",lib="/usr/local/lib/R/site-library")
install.packages("data.table", lib = "/usr/local/lib/R/site-library")
shiny::runApp('Documents/stat4249/project2-project2-group2/app123')
install.packages("Chron")
install.packages("chron")
install.packages("chron")
install_github("Rdatatable/data.table", build_vignettes = FALSE)
devtools ::install_github("Rdatatable/data.table", build_vignettes = FALSE)
remove.packages("data.table")         # First remove the current version
install.packages("data.table")
devtools ::install_github("Rdatatable/data.table")
shiny::runApp('Documents/stat4249/project2-project2-group2/app123')
shiny::runApp('Documents/stat4249/project2-project2-group2/app123')
shiny::runApp('Documents/stat4249/project2-project2-group2/app123')
shiny::runApp('Documents/stat4249/project2-project2-group2/app123')
shiny::runApp('Documents/stat4249/project2-project2-group2/app123')
devtools ::install_github("rstudio/leaflet")
shiny::runApp('Documents/stat4249/project2-project2-group2/app123')
.libpath()
shiny::runApp('Documents/stat4249/project2-project2-group2/app123')
devtools::install_github('rstudio/shinyapps')
deployApp()
library("Sleuth3")
boxplot(g1,g2,g3)
data=ex0623
g1=data[which(data[,2]==“Low-Fat"),3]
g2=data[which(data[,2]=="Mediterranean"),3]
data=ex0623
g1=data[which(data[,2]=="Low-Fat"),3]
g2=data[which(data[,2]=="Mediterranean"),3]
g3=data[which(data[,2]=="Low-Carbohydrate"),3]
boxplot(g1,g2,g3)
devtools::install_github("leaflet-shiny", "jcheng5")
devtools::install_github(rstudio/leaflet)
devtools::install_github("rstudio/leaflet")
names(data)
shiny::runApp('Documents/stat4249/project2-project2-group2/app123')
runApp(host="0.0.0.0",port=5050)
shiny::runApp('Documents/stat4249/project2-project2-group2/app123')
shiny::runApp('Documents/devfest/shinyapps-master/STATS19_scanner')
shiny::runApp('Documents/stat4249/project2-project2-group2/app123')
shiny::runApp('Documents/stat4249/project2-project2-group2/app123')
shiny::runApp('Documents/devfest/shinyapps-master/STATS19_scanner')
shiny::runApp('Documents/stat4249/project2-project2-group2/app123')
data=ex0623
g1=data[which(data[,2]=="Low-Fat"),3]
g2=data[which(data[,2]=="Mediterranean"),3]
g3=data[which(data[,2]=="Low-Carbohydrate"),3]
boxplot(g1,g2,g3)
shiny::runApp('Documents/stat4249/project2-project2-group2/app123')
shiny::runApp('Documents/stat4249/project2-project2-group2/app123')
shiny::runApp('Documents/stat4249/project2-project2-group2/app123')
shiny::runApp('Documents/stat4249/project2-project2-group2/app123')
shiny::runApp('Documents/stat4249/project2-project2-group2/app123')
shiny::runApp('Documents/stat4249/project2-project2-group2/app123')
shiny::runApp('Documents/stat4249/project2-project2-group2/app123')
shiny::runApp('Documents/stat4249/project2-project2-group2/app123')
shiny::runApp('Documents/stat4249/project2-project2-group2/app123')
load("miceData.RData")
readRDS("miceData.RData")
readRDS("miceData.RData")
data <- readRDS(file="casualties_2005-14.Rda")
shiny::runApp('Documents/devfest/shinyapps-master/STATS19_scanner')
load("miceData.RData")
load("zrating.RData")
load("resColumbia.RData")
shiny::runApp('Documents/stat4249/project2-project2-group2/app123')
load(".../data/zrating.RData")
setwd("~/Documents/stat4249/project2-project2-group2")
load("resColumbia.RData")
load(".../data/zrating.RData")
load("~/data/zrating.RData")
load("app/data/zrating.RData")
setwd("~/Documents/stat4249/project2-project2-group2/app123")
load("~/data/zrating.RData")
shiny::runApp('~/Documents/devfest/shinyapps-master/STATS19_scanner')
getwd()
shiny::runApp()
data <- readRDS(file="casualties_2005-14.Rda")
shiny::runApp('~/Documents/devfest/shinyapps-master/STATS19_scanner')
shiny::runApp('~/Documents/devfest/shinyapps-master/STATS19_scanner')
shiny::runApp()
shiny::runApp()
setwd("~/Documents/stat4249/project2-project2-group2/app123")
load("miceData.RData")
shiny::runApp()
setwd("~/Documents/stat4249/project2-project2-group2/app123")
load("miceData.RData")
load("zrating.RData")
load("resColumbia.RData")
source("drawMap.R")
source("drawMap.R")
shiny::runApp()
shiny::runApp()
shiny::runApp()
