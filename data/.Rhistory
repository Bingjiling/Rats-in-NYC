setwd("~/Data Science/project2-project2-group2/data")
x = c("leaflet","dplyr","data.table","XML")
source("../lib/drawMap.R")
source("../lib/getGps.R")
source("../lib/getDataGps.R")
#install.packages(x)
lapply(x,library,character.only = TRUE)
play = miceData[1:10,]
## Data cleaning for mice data
colsToKeep = c("Created Date","Incident Zip","Incident Address","Latitude","Longitude")
miceData = fread("Rat_Sightings.csv",select = colsToKeep)
colnames(miceData) = c("Date","Zip","Address","Latitude","Longitude")
miceData = miceData %>%
na.omit() %>%
mutate(Date = as.Date(Date,"%m/%d/%Y"), Zip = as.numeric(Zip)) %>%
mutate(Year = format(Date,"%Y"),Month = paste(format(Date,"%Y"),format(Date,"%m"),sep="")) %>%
mutate(pop = paste(Date,Address,sep = "<br/>"))
save(miceData, file = "miceData.RData")
play = miceData[1:10,]
Type = rep("Humberger",10)
play = cbind(play,Type)
drawMapFood = function(data){
m = leaflet(data)%>%
addProviderTiles("CartoDB.DarkMatter")%>%
addMarkers(~Longitude, ~Latitude,icon=~Type)
return(m)
}
mPlay = drawMapFood(play)
play$Type
Humberger <- makeIcon(
iconUrl = "Hamburger.gif",
iconWidth = 10, iconHeight = 10
)
drawMapFood = function(data){
m = leaflet(data)%>%
addProviderTiles("CartoDB.DarkMatter")%>%
addMarkers(~Longitude, ~Latitude,icon=~Type)
return(m)
}
Type = rep(Humberger,10)
play = cbind(play,Type)
mPlay = drawMapFood(play)
drawMapFood = function(data){
m = leaflet(data)%>%
addProviderTiles("CartoDB.DarkMatter")%>%
addMarkers(~Longitude, ~Latitude,icon=Type)
return(m)
}
mPlay = drawMapFood(play)
mPlay
rm(Type)
mPlay = drawMapFood(play)
drawMapFood = function(data){
m = leaflet(data)%>%
addProviderTiles("CartoDB.DarkMatter")%>%
addMarkers(~Longitude, ~Latitude,icon=data$Type)
return(m)
}
mPlay = drawMapFood(play)
Type = rep("Humberger",10)
mPlay = drawMapFood(play)
Type = rep(Humberger,10)
drawMapFood = function(data){
m = leaflet(data)%>%
addProviderTiles("CartoDB.DarkMatter")%>%
addMarkers(~Longitude, ~Latitude,icon=Type)
return(m)
}
mPlay = drawMapFood(play)
mPlay
class(Type)
Type = rep(Juice,10)
Humberger <- makeIcon(
iconUrl = "Hamburger.gif",
iconWidth = 8, iconHeight = 8
)
mPlay = drawMapFood(play)
mplay
mPlay
Humberger <- makeIcon(
iconUrl = "Hamburger.gif",
iconWidth = 8, iconHeight = 8
)
mPlay = drawMapFood(play)
mPlay
Humberger <- makeIcon(
iconUrl = "Hamburger.gif",
iconWidth = 6, iconHeight = 6
)
mPlay = drawMapFood(play)
mPlay
Humberger <- makeIcon(
iconUrl = "Hamburger.gif",
iconWidth = 1, iconHeight = 1
)
drawMapFood = function(data){
m = leaflet(data)%>%
addProviderTiles("CartoDB.DarkMatter")%>%
addMarkers(~Longitude, ~Latitude,icon=Type)
return(m)
}
mPlay = drawMapFood(play)
mPlay
Type = rep(Humberger,10)
mPlay = drawMapFood(play)
mPlay
Humberger <- makeIcon(
iconUrl = "Hamburger.gif",
iconWidth = 5, iconHeight = 5
)
Humberger <- makeIcon(
iconUrl = "Hamburger.gif",
iconWidth = 5, iconHeight = 5
)
Type = rep(Humberger,10)
mPlay = drawMapFood(play)
mPlay
Humberger <- makeIcon(
iconUrl = "Hamburger.gif",
iconWidth = 7, iconHeight = 7
)
Type = rep(Humberger,10)
mPlay = drawMapFood(play)
mPlay
Type = rep(Italian,10)
Italian <- makeIcon(
iconUrl = "https://www.emojibase.com/resources/img/emojis/apple/x1f1ee-1f1f9.png.pagespeed.ic.SxTX2CImcp.png",
iconWidth = size, iconHeight = size
)
size = 7
Humberger <- makeIcon(
iconUrl = "Hamburger.gif",
iconWidth = size, iconHeight = size
)
Italian <- makeIcon(
iconUrl = "https://www.emojibase.com/resources/img/emojis/apple/x1f1ee-1f1f9.png.pagespeed.ic.SxTX2CImcp.png",
iconWidth = size, iconHeight = size
)
Type = rep(Italian,10)
mPlay = drawMapFood(play)
mPlay
size = 8
Humberger <- makeIcon(
iconUrl = "Hamburger.gif",
iconWidth = size, iconHeight = size
)
Italian <- makeIcon(
iconUrl = "https://www.emojibase.com/resources/img/emojis/apple/x1f1ee-1f1f9.png.pagespeed.ic.SxTX2CImcp.png",
iconWidth = size, iconHeight = size
)
Type = rep(Italian,10)
mPlay = drawMapFood(play)
mPlay
